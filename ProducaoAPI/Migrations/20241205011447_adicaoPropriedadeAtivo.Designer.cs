// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProducaoAPI.Data;

#nullable disable

namespace ProducaoAPI.Migrations
{
    [DbContext(typeof(ProducaoContext))]
    [Migration("20241205011447_adicaoPropriedadeAtivo")]
    partial class adicaoPropriedadeAtivo
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FormaMaquina", b =>
                {
                    b.Property<int>("FormasId")
                        .HasColumnType("int");

                    b.Property<int>("MaquinasId")
                        .HasColumnType("int");

                    b.HasKey("FormasId", "MaquinasId");

                    b.HasIndex("MaquinasId");

                    b.ToTable("FormaMaquina");
                });

            modelBuilder.Entity("ProducaoAPI.Models.Forma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PecasPorCiclo")
                        .HasColumnType("int");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.ToTable("Formas");
                });

            modelBuilder.Entity("ProducaoAPI.Models.Maquina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Maquinas");
                });

            modelBuilder.Entity("ProducaoAPI.Models.MateriaPrima", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Fornecedor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Preco")
                        .HasColumnType("float");

                    b.Property<string>("Unidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MateriasPrimas");
                });

            modelBuilder.Entity("ProducaoAPI.Models.ProcessoProducao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("Ciclos")
                        .HasColumnType("int");

                    b.Property<double>("CustoTotal")
                        .HasColumnType("float");

                    b.Property<double>("CustoUnitario")
                        .HasColumnType("float");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("FormaId")
                        .HasColumnType("int");

                    b.Property<int>("MaquinaId")
                        .HasColumnType("int");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<double>("QuantidadeProduzida")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("FormaId");

                    b.HasIndex("MaquinaId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("Producoes");
                });

            modelBuilder.Entity("ProducaoAPI.Models.ProcessoProducaoMateriaPrima", b =>
                {
                    b.Property<int>("ProducaoId")
                        .HasColumnType("int");

                    b.Property<int>("MateriaPrimaId")
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<double>("Quantidade")
                        .HasColumnType("float");

                    b.HasKey("ProducaoId", "MateriaPrimaId");

                    b.HasIndex("MateriaPrimaId");

                    b.ToTable("ProducoesMateriasPrimas");
                });

            modelBuilder.Entity("ProducaoAPI.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Medidas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PecasPorUnidade")
                        .HasColumnType("int");

                    b.Property<string>("Unidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("FormaMaquina", b =>
                {
                    b.HasOne("ProducaoAPI.Models.Forma", null)
                        .WithMany()
                        .HasForeignKey("FormasId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProducaoAPI.Models.Maquina", null)
                        .WithMany()
                        .HasForeignKey("MaquinasId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("ProducaoAPI.Models.Forma", b =>
                {
                    b.HasOne("ProducaoAPI.Models.Produto", "Produto")
                        .WithMany("Formas")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("ProducaoAPI.Models.ProcessoProducao", b =>
                {
                    b.HasOne("ProducaoAPI.Models.Forma", "Forma")
                        .WithMany("Producoes")
                        .HasForeignKey("FormaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProducaoAPI.Models.Maquina", "Maquina")
                        .WithMany("Producoes")
                        .HasForeignKey("MaquinaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProducaoAPI.Models.Produto", "Produto")
                        .WithMany("Producoes")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Forma");

                    b.Navigation("Maquina");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("ProducaoAPI.Models.ProcessoProducaoMateriaPrima", b =>
                {
                    b.HasOne("ProducaoAPI.Models.MateriaPrima", "MateriaPrima")
                        .WithMany("ProducaoMateriasPrimas")
                        .HasForeignKey("MateriaPrimaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProducaoAPI.Models.ProcessoProducao", "ProcessoProducao")
                        .WithMany("ProducaoMateriasPrimas")
                        .HasForeignKey("ProducaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MateriaPrima");

                    b.Navigation("ProcessoProducao");
                });

            modelBuilder.Entity("ProducaoAPI.Models.Forma", b =>
                {
                    b.Navigation("Producoes");
                });

            modelBuilder.Entity("ProducaoAPI.Models.Maquina", b =>
                {
                    b.Navigation("Producoes");
                });

            modelBuilder.Entity("ProducaoAPI.Models.MateriaPrima", b =>
                {
                    b.Navigation("ProducaoMateriasPrimas");
                });

            modelBuilder.Entity("ProducaoAPI.Models.ProcessoProducao", b =>
                {
                    b.Navigation("ProducaoMateriasPrimas");
                });

            modelBuilder.Entity("ProducaoAPI.Models.Produto", b =>
                {
                    b.Navigation("Formas");

                    b.Navigation("Producoes");
                });
#pragma warning restore 612, 618
        }
    }
}
